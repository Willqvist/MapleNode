<!doctype html>
<html>
    <head>
    <meta charset="utf-8">
    <style>
    body
    {
        --mainColor:<%= palettes.active.mainColor %>;
        --secondaryMainColor:<%= palettes.active.secondaryMainColor %>;
        --fontColorLight:<%= palettes.active.fontColorLight %>;
        --fontColorDark:<%= palettes.active.fontColorDark %>;
        --fillColor:<%= palettes.active.fillColor %>;
    }
    </style>
    <link rel="stylesheet" type="text/css" href="../CSS/menu.css">
    <link rel="stylesheet" type="text/css" href="../CSS/dashboardGM.css">
    <link rel="stylesheet" type="text/css" href="../CSS/dropdown.css">             
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="images/tabIcon.png">
    <title>Dashboard GM</title>
    </head>
    <body>
        <div id="categoryMenu">
            <div class="categoryMenu_item" id="dashboard-title">
                <h3>Dashboard GM</h3>
            </div>
            <h2 class="subTitle"><span>Main</span></h2>
            <div class="categoryMenu_item" data-page="dashboard">
                <h3>Dashboard</h3>
                <div id="dashboard_saved" class="saved">
                    <svg id="icon-notice" viewBox="0 0 32 32">
                        <title>notice</title>
                        <path d="M15.5 3.5c-7.18 0-13 5.82-13 13s5.82 13 13 13 13-5.82 13-13-5.82-13-13-13zM15.5 23.875c-0.829 0-1.5-0.672-1.5-1.5s0.671-1.5 1.5-1.5c0.828 0 1.5 0.672 1.5 1.5s-0.672 1.5-1.5 1.5zM17 17.375c0 0.828-0.672 1.5-1.5 1.5-0.829 0-1.5-0.672-1.5-1.5v-7c0-0.829 0.671-1.5 1.5-1.5 0.828 0 1.5 0.671 1.5 1.5v7z"></path>
                    </svg>
                </div>
            </div>
            <div class="categoryMenu_item" data-page="general">
                <h3>General</h3>
                <div id="general_saved" class="saved">
                    <svg id="icon-notice" viewBox="0 0 32 32">
                        <title>notice</title>
                        <path d="M15.5 3.5c-7.18 0-13 5.82-13 13s5.82 13 13 13 13-5.82 13-13-5.82-13-13-13zM15.5 23.875c-0.829 0-1.5-0.672-1.5-1.5s0.671-1.5 1.5-1.5c0.828 0 1.5 0.672 1.5 1.5s-0.672 1.5-1.5 1.5zM17 17.375c0 0.828-0.672 1.5-1.5 1.5-0.829 0-1.5-0.672-1.5-1.5v-7c0-0.829 0.671-1.5 1.5-1.5 0.828 0 1.5 0.671 1.5 1.5v7z"></path>
                    </svg>
                </div>
            </div>
            <div class="categoryMenu_item" data-page="vote">
                <h3>Voting</h3>
                <div id="vote_saved" class="saved">
                    <svg id="icon-notice" viewBox="0 0 32 32">
                        <title>notice</title>
                        <path d="M15.5 3.5c-7.18 0-13 5.82-13 13s5.82 13 13 13 13-5.82 13-13-5.82-13-13-13zM15.5 23.875c-0.829 0-1.5-0.672-1.5-1.5s0.671-1.5 1.5-1.5c0.828 0 1.5 0.672 1.5 1.5s-0.672 1.5-1.5 1.5zM17 17.375c0 0.828-0.672 1.5-1.5 1.5-0.829 0-1.5-0.672-1.5-1.5v-7c0-0.829 0.671-1.5 1.5-1.5 0.828 0 1.5 0.671 1.5 1.5v7z"></path>
                    </svg>
                </div>
            </div>
            <h2 class="subTitle"><span>Style</span></h2>
            <div class="categoryMenu_item" data-page="design">
                <h3>Design</h3>
                <div id="design_saved" class="saved">
                     <svg id="icon-notice" viewBox="0 0 32 32">
                        <title>notice</title>
                        <path d="M15.5 3.5c-7.18 0-13 5.82-13 13s5.82 13 13 13 13-5.82 13-13-5.82-13-13-13zM15.5 23.875c-0.829 0-1.5-0.672-1.5-1.5s0.671-1.5 1.5-1.5c0.828 0 1.5 0.672 1.5 1.5s-0.672 1.5-1.5 1.5zM17 17.375c0 0.828-0.672 1.5-1.5 1.5-0.829 0-1.5-0.672-1.5-1.5v-7c0-0.829 0.671-1.5 1.5-1.5 0.828 0 1.5 0.671 1.5 1.5v7z"></path>
                    </svg>
                </div>
            </div>
            <div class="categoryMenu_item" data-page="layout">
                <h3>Layout</h3>
                <div id="layout_saved" class="saved">
                    <svg id="icon-notice" viewBox="0 0 32 32">
                        <title>notice</title>
                        <path d="M15.5 3.5c-7.18 0-13 5.82-13 13s5.82 13 13 13 13-5.82 13-13-5.82-13-13-13zM15.5 23.875c-0.829 0-1.5-0.672-1.5-1.5s0.671-1.5 1.5-1.5c0.828 0 1.5 0.672 1.5 1.5s-0.672 1.5-1.5 1.5zM17 17.375c0 0.828-0.672 1.5-1.5 1.5-0.829 0-1.5-0.672-1.5-1.5v-7c0-0.829 0.671-1.5 1.5-1.5 0.828 0 1.5 0.671 1.5 1.5v7z"></path>
                    </svg>
                </div>
            </div>
        </div>
        <div id="content">
            <div id="menu"></div>
            <div id="pages">
                <section class="page" id="dashboard">
                    <div class="pageHeader">
                        <h4>Dashboard</h4>
                        <div class="save btn"><span>save</span></div>
                    </div>
                </section>
                <section class="page" id="vote">
                    <div class="pageHeader">
                        <h4>Voting</h4>
                        <div class="save btn"><span>save</span></div>
                        <div class="add btn"><span>add</span></div>
                    </div>
                    <div class="voteSiteHolder">
                        <% for(let i = 0; i < votes.length; i++)
                        {
                            let vote = votes[i];
                        %>
                        <div class="voteSite" data-site="<%= vote.name %>" id="<%= vote.name %>">
                            <div class="edit">
                                <svg id="icon-pencil2" viewBox="0 0 24 24">
                                    <title>pencil2</title>
                                    <path d="M21.7 7.3l-5-5c-0.4-0.4-1-0.4-1.4 0l-13 13c-0.2 0.2-0.3 0.4-0.3 0.7v5c0 0.6 0.4 1 1 1h5c0.3 0 0.5-0.1 0.7-0.3l13-13c0.4-0.4 0.4-1 0-1.4zM7.6 20h-3.6v-3.6l12-12 3.6 3.6-12 12z"></path>
                                </svg>
                            </div>
                            <h5 class="name"><%= vote.name %></h5>
                            <h6 data-beforeContent="Nx per vote" class="nx before"><%= vote.nx %></h6>
                            <h6 data-beforeContent="Vote interval" class="time before"><%= vote.time %></h6>
                            <h6 data-beforeContent="Full url" class="url before"><%= vote.url %></h6>
                        </div>
                        <% } %>
                    </div>
                </section>
                <section class="page" id="design">
                    <div class="pageHeader">
                        <h4>Design</h4>
                        <div class="save btn"><span>save</span></div>
                    </div>
                    <div class="voteSiteHolder">
                        <div class="voteSite" id="palette">
                            <div class="edit">
                                <svg id="icon-pencil2" viewBox="0 0 24 24">
                                    <title>pencil2</title>
                                    <path d="M21.7 7.3l-5-5c-0.4-0.4-1-0.4-1.4 0l-13 13c-0.2 0.2-0.3 0.4-0.3 0.7v5c0 0.6 0.4 1 1 1h5c0.3 0 0.5-0.1 0.7-0.3l13-13c0.4-0.4 0.4-1 0-1.4zM7.6 20h-3.6v-3.6l12-12 3.6 3.6-12 12z"></path>
                                </svg>
                            </div>
                            <h5 data-beforeContent="Color palette" class="name before"><%= palettes.active.name %></h5>
                            <div class="colorPlatteHolder">
                                <div class="colorPallete MainColor"></div>
                                <div class="colorPallete SecondaryMainColor"></div>
                                <div class="colorPallete FontColorLight"></div>
                                <div class="colorPallete FontColorDark"></div>
                                <div class="colorPallete FillColor"></div> 
                            </div>                                                                                   
                        </div>
                    </div>
                </section>
            </div>
        </div>
        <div class="dropdownBtn btn noSelect colorPaletteChoose" id="dropdown" data-dropdowncontent="searchRankingSettings">
            <span>â–¾ palette</span>
            <ul id="searchRankingSettings" class="noSelect dropdownContent">
                <%
                for(let i = 0; i < palettes.all.length; i++)
                {
                %>
                    <li data-select="<%= palettes.all[i].name %>"><%= palettes.all[i].name %>
                        <div class="allPalettes">
                            <div style="background:<%= palettes.all[i].mainColor %>"></div>
                            <div style="background:<%= palettes.all[i].fontColorLight %>"></div>
                            <div style="background:<%= palettes.all[i].fillColor %>"></div>
                            <div style="background:<%= palettes.all[i].secondaryMainColor %>"></div>
                            <div style="background:<%= palettes.all[i].fontColorDark %>"></div> 
                        </div>
                    </li>
                <%
                }
                %>
            </ul>
        </div>
        <script src="../JS/onload.js"></script>
        <script src="../JS/HttpHandler.js"></script>
        <script src="../JS/dropdown.js"></script>
        <script>
            let pageVisible;
            let palettes = 
            {
                <%
                for(let i = 0; i < palettes.all.length; i++)
                {
                %>
                "<%= palettes.all[i].name %>":
                {
                 mainColor:"<%= palettes.all[i].mainColor %>",
                 fontColorLight:"<%= palettes.all[i].fontColorLight %>",
                 fillColor:"<%= palettes.all[i].fillColor %>",
                 secondaryMainColor:"<%= palettes.all[i].secondaryMainColor %>",
                 fontColorDark:"<%= palettes.all[i].fontColorDark %>"
                },
                <%
                }
                %>
            }
            let vote = document.getElementById("vote");
            let dashboard = document.getElementById("dashboard");
            let design = document.getElementById("design");
            let pages =
            {
                vote:{id:"vote",isSaved:true,page:vote,method:onVoteLoad},
                design:{id:"design",isSaved:true,page:design,method:onDesignLoad},
                //design:{id:"design",isSaved:true,page:vote,method:onVoteLoad},
                //layout:{id:"layout",isSaved:true,page:vote,method:onVoteLoad},
                dashboard:{id:"dashboard",isSaved:true,page:dashboard,method:onDashboardLoad},
            }
            setSaveButton(pages.vote,pages.vote.page.getElementsByClassName("save")[0]);
            setSaveButton(pages.design,pages.design.page.getElementsByClassName("save")[0]);
            //setCancelSaveButton(pages.vote,document.getElementById("gtop.com"));
            
            loadPage(pages.dashboard);
            function onDashboardLoad(page)
            {
            }
            function getEditButtonsClick(page,callback,shouldPageBeLoaded = true)
            {
             if(!page.hasLoaded || !shouldPageBeLoaded)
                {
                    let edits = page.page.getElementsByClassName("edit");
                    for(let i = 0; i < edits.length; i++)
                    {
                        edits[i].addEventListener("click",function()
                        {
                            callback(this);
                        },false);
                    }
                }
            }
            function onDesignLoad(page)
            {
                let dropdownTemplate = new DOMCompiler("<div class=\"dropdownBtn btn noSelect\" id=\"dropdown\" data-dropdownContent=\"searchRankingSettings\"><span>&dtrif; Happy Green</span><ul id=\"searchRankingSettings\" class=\"noSelect dropdownContent\"><li data-select=\"Happy Green\">HG</li><li data-select=\"Deep Blue\">DB</li></ul></div>").compileDOM();
                dropdownTemplate = document.getElementById("dropdown");
                console.log("template",dropdownTemplate);
                console.log(dropdowns.length);
                let form = new FormPopup("colorPalette");
                dropdownClickHandler(dropdownTemplate,(self,attribute,target)=>
                {
                    self.childNodes[1].innerHTML = "&dtrif; "+attribute;
                    form.setSetting({name:"paletteName",value:attribute});
                    form.setSetting({name:"palette",value:palettes[attribute]})
                });
                form.setCloseable();
                form.appendDom();
                getEditButtonsClick(page,(self)=>
                {
                    form.show();
                },true);
                form.addElement(dropdownTemplate);
                form.addButton({type:"submit",value:"Change"});
                form.onSubmit((data)=>
                {
                    console.log(data.settings);
                    page.design = {name:data.settings.paletteName,colors:data.settings.palette};
                    document.body.style.setProperty("--mainColor",data.settings.palette.mainColor);
                    document.body.style.setProperty("--secondaryMainColor",data.settings.palette.secondaryMainColor);
                    document.body.style.setProperty("--fontColorLight",data.settings.palette.fontColorLight);
                    document.body.style.setProperty("--fontColorDark",data.settings.palette.fontColorDark);
                    document.body.style.setProperty("--fillColor",data.settings.palette.fillColor);
                    setUnsaved(page);
                    form.hide();
                });
                page.onSave = function(page)
                { 
                    if(page.isSaved) return;
                    console.log(page.design);
                    let url = new Url("dashboard/palette/update",{name:page.design.name,palette:page.design.colors});
                    HttpHandler.postData(url,(response)=>
                    {
                        console.log(response);
                        setSaved(page);
                    });
                }
            }
            function onVoteLoad(page)
            {
                //VOTE SCRIPT
                let form = new FormPopup("changeVote");
                let add = page.page.getElementsByClassName("add")[0];
                if(!isUnsaved(page)){
                    let sites = {
                        <% for(let i = 0; i < votes.length; i++)
                        {
                            let vote = votes[i];
                        %>
                        "<%= vote.name %>":{element:document.getElementById("<%= vote.name %>"),name:"<%= vote.name %>",nx:<%=vote.nx%>,time:"<%= vote.time %>",url:"<%= vote.url %>"},
                        <% } %>
                    };
                    page.originalValues = copyObject(sites);
                    page.newValues = sites;
                }
                let sites = page.newValues;
                let loadBtns = function(self)
                {
                    console.log(form);
                    if(!form.isActive()){
                        let site = self.parentNode.getAttribute("data-site");
                        form.setSetting({name:"site",value:site});
                        form.setValue({id:"nx",value:sites[site].nx});
                        form.setValue({id:"time",value:sites[site].time});
                        form.setValue({id:"name",value:sites[site].name});
                        form.setValue({id:"url",value:sites[site].url});
                        form.show();
                    }
                };
                getEditButtonsClick(page,loadBtns,true);
                form.addInput({id:"name"});
                form.addInput({id:"nx"});
                form.addInput({id:"time"});
                form.addInput({id:"url"});
                form.addButton({type:"submit",value:"Apply"});
                form.setCloseable();
                form.appendDom();
                form.onSubmit((data)=>
                {
                    console.log(data.fields,data.settings,self);
                    let site = sites[data.settings.site];
                    if(site.nx != data.fields.nx || site.time != data.fields.time || site.url != data.fields.url || site.name != data.fields.name)
                        setUnsaved(page);
                    site.nx = parseInt(data.fields.nx);
                    site.time = data.fields.time;
                    site.url = data.fields.url;
                    site.name = data.fields.name;
                    site.element.getElementsByClassName("nx")[0].innerHTML = data.fields.nx;
                    site.element.getElementsByClassName("time")[0].innerHTML = data.fields.time;
                    site.element.getElementsByClassName("name")[0].innerHTML = data.fields.name;
                    site.element.getElementsByClassName("url")[0].innerHTML = data.fields.url;
                    form.hide();
                });
                page.onCancelSave = function(page)
                {
                }
                page.onSave = function(page)
                {
                    if(!page.isSaved)
                    {
                        let url = new Url("/dashboard/votes/update",{newValue:page.newValues,originalValue:page.originalValues});
                        HttpHandler.postData(url,((data)=>
                        {
                            console.log(data);
                            if(data.success)
                            {
                                page.originalValues = page.originalValues = copyObject(page.newValues);
                                setSaved(page);
                            }
                        }).bind(page));
                    }
                }
                //add vote site

                let voteSiteElement = new DOMCompiler("<div class=\"voteSite\" data-site=\"{{name}}\" id=\"{{name}}\"><div class=\"edit\"><svg id=\"icon-pencil2\" viewBox=\"0 0 24 24\"><title>pencil2</title><path d=\"M21.7 7.3l-5-5c-0.4-0.4-1-0.4-1.4 0l-13 13c-0.2 0.2-0.3 0.4-0.3 0.7v5c0 0.6 0.4 1 1 1h5c0.3 0 0.5-0.1 0.7-0.3l13-13c0.4-0.4 0.4-1 0-1.4zM7.6 20h-3.6v-3.6l12-12 3.6 3.6-12 12z\"></path></svg></div><h5 class=\"name\">{{name}}</h5><h6 data-beforeContent=\"Nx per vote\" class=\"nx before\">{{nx}}</h6><h6 data-beforeContent=\"Vote interval\" class=\"time before\">{{time}}</h6><h6 data-beforeContent=\"Full url\" class=\"url before\">{{url}}</h6></div>");
                let voteSiteHolder = document.getElementsByClassName("voteSiteHolder")[0];
                let addNewVoteForm = form.copy("newForm");
                addNewVoteForm.setCloseable();
                addNewVoteForm.appendDom();
                addNewVoteForm.onSubmit((data)=>
                {
                    console.log("wew",data);
                    voteSiteElement.setVariable({variable:"name",data:data.fields.name});
                    voteSiteElement.setVariable({variable:"nx",data:data.fields.nx});
                    voteSiteElement.setVariable({variable:"time",data:data.fields.time});
                    voteSiteElement.setVariable({variable:"url",data:data.fields.url});
                    let element = voteSiteElement.compileDOM();
                    voteSiteHolder.appendChild(element);
                    console.log(element);
                    let site = {element:element,name:data.fields.name,nx:data.fields.nx,time:data.fields.time,url:data.fields.url};
                    sites[data.fields.name] = site;
                    page.originalValues[data.fields.name] = site;
                    getEditButtonsClick(page,loadBtns,false);
                    addNewVoteForm.hide();
                    form.hide();
                    setUnsaved(page);
                });
                addNewVoteForm.addButton({type:"submit",value:"Apply"}); 
                add.addEventListener("click",function()
                {
                    if(!form.isActive()){
                        addNewVoteForm.show();
                    }
                },false);

            }
            //PAGE HANDLER
            function setSaveButton(page,button)
            {
                button.addEventListener("click",()=>
                {
                    page.onSave(page);
                });
            }
            function setCancelSaveButton(page,button)
            {
                button.addEventListener("click",()=>
                {
                    page.onCancelSave(page);
                });                
            }
            function setUnsaved(page)
            {
               page.isSaved = false;
               console.log(page.page.getElementsByClassName("save")[0]);
               page.page.getElementsByClassName("save")[0].style.background="#3e78b2";
               document.getElementById(page.id+"_saved").style.opacity="1";
            }
            function setSaved(page)
            {
                page.isSaved = true;
                page.page.getElementsByClassName("save")[0].style.background="#c4c4c4";
                document.getElementById(page.id+"_saved").style.opacity="0";
            }
            function isUnsaved(page)
            {
                return !page.isSaved;
            }
            function copyObject(object)
            {
                let obj = Object.assign({},object);
                for(let key in obj)
                {
                    if(typeof obj[key] == "object")
                        obj[key] = Object.assign({},object[key]);
                }
                return obj;
            }
            function loadPage(page)
            {
                if(pageVisible)
                    pageVisible.page.style.display="none";
                page.page.style.display="block";
                pageVisible = page;
                if(!page.hasLoaded)
                    page.method(page);
                page.hasLoaded = true;
            }


            let menu = document.getElementsByClassName("categoryMenu_item");
            for(let i = 0; i < menu.length; i++)
            {
                menu[i].addEventListener("click",function()
                {
                    let page = pages[this.getAttribute("data-page")];
                    if(page)
                        loadPage(page);
                },false);
            }

        </script>
    </body>
</html>