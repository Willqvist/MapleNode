<!doctype html>
<html>
    <head>
        <meta charset="utf-8">
        <style>
            body
            {
                --mainColor:<%= palette.mainColor %>;
                --secondaryMainColor:<%= palette.secondaryMainColor %>;
                --fontColorLight:<%= palette.fontColorLight %>;
                --fontColorDark:<%= palette.fontColorDark %>;
                --fillColor:<%= palette.fillColor %>;
            }
        </style>
        <link rel="stylesheet" type="text/css" href="CSS/statusPage.css">
        <link rel="stylesheet" type="text/css" href="CSS/rankingPage.css">    
        <link rel="stylesheet" type="text/css" href="CSS/media.css">   
        <link rel="stylesheet" type="text/css" href="CSS/menu.css"> 
        <link rel="stylesheet" type="text/css" href="CSS/dropdown.css">             
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="icon" href="images/tabIcon.png">
        <title>Ranking</title>
    </head>
    <body>
        <header id="header">
            <div id="fade"></div>
            <div id="headerContent" class="maxWidth">
                <div id="headerInfo">
                    <h1>Ranking</h1>
                </div>
            </div>
        </header>
            <section id="content" class="maxWidth">
            <div id="settings" class="tab">
                <div id="settingsBtns">
                    <div class="dropdownBtn btn noSelect" data-dropdownContent="searchSettings"><span>&dtrif; Overall</span>
                        <ul id="searchSettings"class="noSelect dropdownContent">
                            <%
                            for(let key in jobs)
                            {
                            %>
                            <li data-id="<%=key%>" data-select="<%=jobs[key]%>"><%= jobs[key]%></li>
                            <%
                            }
                            %>
                        </ul>
                    </div>
                    <div class="dropdownBtn btn noSelect" data-dropdownContent="searchRankingSettings"><span>&dtrif; Level</span>
                        <ul id="searchRankingSettings" class="noSelect dropdownContent">
                            <li data-select="Level">Level</li>
                            <li data-select="Fame">Fame</li>
                        </ul>
                    </div>
                    <div id="reloadSearch">
                    <svg id="icon-search" viewBox="0 0 32 32">
                        <title>search</title>
                        <path d="M27.802 5.197c-2.925-3.194-7.13-5.197-11.803-5.197-8.837 0-16 7.163-16 16h3c0-7.18 5.82-13 13-13 3.844 0 7.298 1.669 9.678 4.322l-4.678 4.678h11v-11l-4.198 4.197z"></path>
                        <path d="M29 16c0 7.18-5.82 13-13 13-3.844 0-7.298-1.669-9.678-4.322l4.678-4.678h-11v11l4.197-4.197c2.925 3.194 7.13 5.197 11.803 5.197 8.837 0 16-7.163 16-16h-3z"></path>
                    </svg>
                </div>
                </div>
                <form>
                    <input placeholder="Search..." id="searchBar" />
                    <div id="searchBtn">
                        <svg id="icon-search" viewBox="0 0 32 32">
                            <title>search</title>
                            <path d="M19.427 20.427c-1.39 0.99-3.090 1.573-4.927 1.573-4.694 0-8.5-3.806-8.5-8.5s3.806-8.5 8.5-8.5c4.694 0 8.5 3.806 8.5 8.5 0 1.837-0.583 3.537-1.573 4.927l5.585 5.585c0.55 0.55 0.546 1.431-0 1.976l-0.023 0.023c-0.544 0.544-1.431 0.546-1.976 0l-5.585-5.585zM14.5 20c3.59 0 6.5-2.91 6.5-6.5s-2.91-6.5-6.5-6.5c-3.59 0-6.5 2.91-6.5 6.5s2.91 6.5 6.5 6.5v0z"></path>
                        </svg>
                    </div>
                </form>
            </div>
            <div class="block fullBlock">
                <ul class="blockHeader">
                    <li class="title">Level Rank</li>
                    <li class="characterMenu"><span class="title">Character</span><span class="title">Name</span></li>
                    <li class="title">Job / Job rank</li>
                    <li class="title">Level</li>
                </ul>
                <div id="usersWrapper">
                    <div class="loader" id="rankLoader">
                        <p>Loading</p>    
                    </div>
                    <div id="users">

                    </div>
                </div>
            </div>
            <div  class="tab pageTab">
                <div id="prev" class="btn noSelect"><span>Previous Page</span></div>  
                <div id="pageInfo"><h3 id="pageNumber">0</h3></div>
                <div id="next" class="btn noSelect"><span>Next Page</span></div>
            </div>                     
        </section>
        <script src="JS/HttpHandler.js"></script>
        <script src="JS/dropdown.js"></script>
        <script>
           let jobs = "-1";
           let rank = "Level";
           let reload = document.getElementById("reloadSearch");
           let titles = document.getElementsByClassName("title");
           let title =
           {
               ORDER:0,
               CHARACTER:1,
               NAME:2,
               JOB:3,
               RANK:4,
           }
           dropdownClickHandler(dropdownBtns[0],changeJob);
           dropdownClickHandler(dropdownBtns[1],changeRank);
           function changeJob(self,data,dataId)
           {
               self.firstChild.innerHTML = "&dtrif; "+data;
               jobs = dataId;
           }
           function changeRank(self,data,dataId)
           {
               self.firstChild.innerHTML = "&dtrif; "+data;
               rank = data;
           }
            //###RELOAD####
            reload.addEventListener("click",()=>
            {
                console.log("wew");
                reloadPage();
                //reload.childNodes[1].style.transform = "rotateZ(180deg) !important";
            },false);
        </script>
        <script>
            let loader = new Loader("rankLoader");
            let userElement = new DOMCompiler("<div class=\"user\">\r\n<h3 class=\"rank\">{{placement}}</h3>\r\n<div class=\"character\">\r\n<div class=\"characterImage\"></div>\r\n<h3>{{name}}</h3>\r\n</div>\r\n<h3 class=\"job\"><span>({{jobRank}})</span>{{job}}</h3>\r\n<h3 class=\"level\">{{rank}}</h3>\r\n</div>");
            let page = 0;
            let length = 5;
            let search;
            let isLoading = false;
            let next = document.getElementById("next");
            let prev = document.getElementById("prev");
            let userWrapper = document.getElementById("users");
            let pageNumer = document.getElementById("pageNumber");
            //userElement.setVariable({variable:"rank",data:1});
            goToPage(0);
            prevButton();
            function isset(variable)
            {
                return typeof variable !== 'undefined'
            }
            function goToPage(page){
                pageNumer.innerHTML = page;
                isLoading= true;
                loader.show();
                console.log(jobs,rank);
                let url = new Url("/IO/ranking",{page:page,job:jobs,rank:rank,search:search});
                HttpHandler.postData(url,(response)=>
                {
                    userWrapper.innerHTML = "";
                    console.log(response);
                    for(let i = 0; i < response.length; i++){
                        let user = response[i]; 
                        userElement.setVariable({variable:"placement",data:user.rank.toString()});
                        userElement.setVariable({variable:"name",data:user.name});
                        userElement.setVariable({variable:"job",data:user.job.toString()});
                        userElement.setVariable({variable:"jobRank",data:user.jobRank.toString()});
                        if(isset(user.level))
                        {
                            userElement.setVariable({variable:"rank",data:user.level.toString()});
                            titles[title.RANK].innerHTML = "Level";
                        }
                        else if(isset(user.fame))
                        {
                            userElement.setVariable({variable:"rank",data:user.fame.toString()});
                            titles[title.RANK].innerHTML = "Fame";
                        }
                        let element = userElement.compileDOM();
                        let image = element.getElementsByClassName("characterImage")[0];
                        image.style.background="url(Characters/"+user.name+".chr)";
                        image.style.backgroundSize="18em";
                        image.style.backgroundPosition="50% 50%";
                        userWrapper.appendChild(element);
                        if(response.length < length)
                        {
                            length = response.length;
                            userWrapper.style.minHeight = (8 * length) + "em";
                        }
                    }
                    loader.hide();
                    isLoading = false;
                });
            }
            console.log(usersWrapper);
            next.addEventListener("click",goNext,false);
            prev.addEventListener("click",goPrev,false);
            function goNext()
            {
                if(!canChangePage()) return;
                page ++;
                goToPage(page);
                prevButton();
            }
            function prevButton()
            {
                if(page == 0)
                {
                    prev.style.background="#bdc0c4";
                    prev.style.cursor = "not-allowed";
                }
                else
                {
                    prev.style.background="#3e78b2";
                    prev.style.cursor = "pointer";
                }
            }
            function goPrev()
            {
                if(!canChangePage() || page == 0)  return;
                page --;
                goToPage(page);  
                prevButton();         
            }
            function canChangePage()
            {
                return !isLoading;
            }
            function reloadPage()
            {
                if(isLoading) return;
                goToPage(0);
            }

            //##SEARCH 

            let searchBtn = document.getElementById("searchBtn");
            let searchBar = document.getElementById("searchBar");
            searchBar.addEventListener("keyup",function()
            {
                console.log(this.value);
                search = this.value;
                if(this.value.length > 0)
                {
                    searchBtn.style.boxShadow = "inset 0px -4.5em 0 #3e78b2";
                }
                else
                {
                   searchBtn.style.boxShadow = "inset 0px -0em 0 #3e78b2"; 
                }
            },false);

            searchBtn.addEventListener("click",function()
            {
                reloadPage();
            },false);
        </script>
    </body>
</html>