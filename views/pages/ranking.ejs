<!doctype html>
<html>
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" type="text/css" href="CSS/statusPage.css">
        <link rel="stylesheet" type="text/css" href="CSS/header.css">
        <link rel="stylesheet" type="text/css" href="CSS/media.css">
        <link rel="stylesheet" type="text/css" href="CSS/menu.css">
        <link rel="stylesheet" type="text/css" href="CSS/dropdown.css">
        <link rel="stylesheet" type="text/css" href="CSS/rankingPage.css">
        <%- include('../imports/head'); %>
        <title>Ranking</title>
        <%- include('../imports/menu'); %>
            <section id="content" class="maxWidth">
            <div id="settings" class="tab">
                <div id="settingsBtns">
                        <div class="dropdownBtn rankBtn noSelect" data-dropdownContent="searchSettings"><span>&dtrif; Overall</span>
                            <div id="searchSettings"class="noSelect dropdownContent" scroll max="10" search>
                                <form>
                                    <input class="searchInput" placeholder="Search..." filter="jobDropdownContent">
                                </form>
                                <ul id="jobDropdownContent">
                                <% for(const key in options.jobs) {
                                    const jobName = options.jobs[key];
                                %>
                                    <li data-id="<%= key %>" data-select="<%= jobName %>"><%= jobName %></li>
                                <%}%>
                                </ul>
                            </div>
                        </div>
                    <div class="dropdownBtn rankBtn noSelect" data-dropdownContent="searchRankingSettings"><span>&dtrif; Level</span>
                        <ul id="searchRankingSettings" class="noSelect dropdownContent">
                            <li data-select="Level">Level</li>
                            <li data-select="Fame">Fame</li>
                        </ul>
                    </div>
                    <div id="reloadSearch">
                     <i id="icon-search" class="fas fa-sync-alt"></i>
                    </div>
                </div>
                <form>
                    <input placeholder="Search..." id="searchBar" class="box_style"/>
                    <div id="searchBtn">
                        <i id="icon-search" class="fas fa-search"></i>
                    </div>
                </form>
            </div>
            <div class="block fullBlock">
                <ul class="blockHeader">
                    <li class="title">Level Rank</li>
                    <li class="characterMenu"><span class="title">Character</span><span class="title">Name</span></li>
                    <li class="title">Job / Job rank</li>
                    <li class="title">Level</li>
                </ul>
                <div id="usersWrapper" class="box_style">
                    <div id="userPreview">
                        <div id="closePreview"><i class="fas fa-times"></i></div>
                        <div class="userPreviewWrapper">
                            <div id="userPreviewImage"></div>
                            <div id="userPreviewContent">
                                <h1 id="previewName">Username</h1>
                            </div>
                        </div>
                    </div>
                    <div class="loader" id="rankLoader">
                        <p>Loading</p>
                    </div>
                    <div id="users">

                    </div>
                </div>
            </div>
            <div  class="tab pageTab">
                <div id="prev" class="rankBtn noSelect"><span>Previous Page</span></div>
                <div id="pageInfo"><input id="pageNumber" value="0"></input></div>
                <div id="next" class="rankBtn noSelect"><span>Next Page</span></div>
            </div>
        </section>
        <script type="module">
            import Http from './JS/API/Http.js';
            import Url from './JS/API/Url.js';
            import { dropdownClickHandler } from './JS/dropdown.js';
            let jobs = "-1";
            let rank = "Level";
            const charactersAmount = <%= options.charactersAmount %>;
            const reload = document.getElementById("reloadSearch");
            const titles = document.getElementsByClassName("title");
            const dropdownBtns = document.getElementsByClassName("dropdownBtn");
            let title =
                {
                    ORDER:0,
                    CHARACTER:1,
                    NAME:2,
                    JOB:3,
                    RANK:4,
                }
            dropdownClickHandler(dropdownBtns[0],changeJob);
            dropdownClickHandler(dropdownBtns[1],changeRank);
            function changeJob(self,data,dataId)
            {
                self.firstChild.innerHTML = "&dtrif; "+data;
                jobs = dataId;
            }
            function changeRank(self,data,dataId)
            {
                self.firstChild.innerHTML = "&dtrif; "+data;
                rank = data;
            }
            //###RELOAD####
            reload.addEventListener("click",()=>
            {
                reloadPage();
                //reload.childNodes[1].style.transform = "rotateZ(180deg) !important";
            },false);

            let loader = new Loader("rankLoader");
            let userElement = new DOMCompiler("<div class=\"user\">\r\n<h3 class=\"rank\">{{placement}}</h3>\r\n<div class=\"character\">\r\n<div class=\"characterImage\"></div>\r\n<h3>{{name}}</h3>\r\n</div>\r\n<h3 class=\"job\"><span>({{jobRank}})</span>{{job}}</h3>\r\n<h3 class=\"level\">{{rank}}</h3>\r\n</div>");
            let pageNum = 0;
            let length = 5;
            let search;
            let isLoading = false;
            let next = document.getElementById("next");
            let prev = document.getElementById("prev");
            let userWrapper = document.getElementById("users");
            let pageNumer = document.getElementById("pageNumber");
            const wrapper = document.getElementById('usersWrapper');
            let canGoNext = true;

            let lastClickedUser = null;

            /* PREVIEW ELEMENTS */
            const preview = document.getElementById('userPreview');
            const previewName = document.getElementById('previewName');
            const previewImage = document.getElementById('userPreviewImage');

            document.getElementById('closePreview').addEventListener("click",hidePreview);

            //userElement.setVariable({variable:"rank",data:1});
            goToPage(0);
            prevButton();

            pageNumer.addEventListener('keydown', async (e)=> {
                const prevNum = pageNum;
                if(e.key === 'Enter') {
                    const success = await goToPage(pageNumer.value);
                    if(!success) {
                        await goToPage(Math.floor(charactersAmount/5));
                    }
                }
            }, false);

            function setPreviewImage(img) {
                previewImage.style.background = `url(characters/${img}.chr)`;
                previewImage.style.backgroundSize="contain";
                previewImage.style.backgroundPosition="50% 50%";
            }

            function setPreviewUser(usr) {
                setPreviewImage(usr.name);
                previewName.innerHTML = usr.name;
                wrapper.style.minHeight = "35rem";
                preview.style.display="flex";
            }

            function hidePreview() {
                wrapper.style.minHeight = "auto";
                preview.style.display="none";
            }

            function isset(variable)
            {
                return typeof variable !== 'undefined'
            }
            function showUser(user)
            {
                //user.style.height="15em";
                setPreviewUser(user);
            }
            function hideUser(user)
            {
                //user.style.height = "8em";
            }
            async function goToPage(page){
                pageNumer.value = page;
                pageNum = page;
                isLoading= true;
                hidePreview();
                loader.show();
                console.log(jobs,rank);
                let url = new Url("/IO/ranking",{page:page,job:jobs,rank:rank,search:search});
                const resp = await Http.POST(url);
                console.log(resp);
                const response = resp.characters;
                canGoNext = response.length >= 5;
                nextButton();
                console.log(response);
                userWrapper.innerHTML = "";
                for(let i = 0; i < response.length; i++){
                    let user = response[i];
                    userElement.setVariable({variable:"placement",data:user.globalLevelOrder.toString()});
                    userElement.setVariable({variable:"name",data:user.name});
                    userElement.setVariable({variable:"job",data:resp.jobNames[user.job].toString()});
                    userElement.setVariable({variable:"jobRank",data:user.jobOrder.toString()});
                    if(isset(user.level))
                    {
                        userElement.setVariable({variable:"rank",data:user.level.toString()});
                        titles[title.RANK].innerHTML = "Level";
                    }
                    else if(isset(user.fame))
                    {
                        userElement.setVariable({variable:"rank",data:user.fame.toString()});
                        titles[title.RANK].innerHTML = "Fame";
                    }
                    let element = userElement.compileDOM();
                    let image = element.getElementsByClassName("characterImage")[0];
                    image.style.background="url(characters/"+user.name+".chr)";
                    image.style.backgroundSize="14em";
                    image.style.backgroundPosition="50% 50%";
                    element.addEventListener(
                        "click",
                        (()=>
                        {
                            showUser(user);
                        }).bind(element),false
                    );

                    userWrapper.appendChild(element);
                    if(response.length < length)
                    {
                        length = response.length;
                        userWrapper.style.minHeight = (8 * length) + "em";
                    }
                }
                loader.hide();
                isLoading = false;
                return response.length !== 0;
            }
            next.addEventListener("click",goNext,false);
            prev.addEventListener("click",goPrev,false);
            function goNext()
            {
                nextButton();
                if(!canChangePage() || !canGoNext) return;
                goToPage(pageNum+1);
                prevButton();
            }
            function prevButton()
            {
                if(pageNum == 0)
                {
                    prev.style.background="#bdc0c4";
                    prev.style.cursor = "not-allowed";
                }
                else
                {
                    prev.style.background="#3e78b2";
                    prev.style.cursor = "pointer";
                }
            }

            function nextButton() {
                if(!canGoNext)
                {
                    next.style.background="#bdc0c4";
                    next.style.cursor = "not-allowed";
                }
                else
                {
                    next.style.background="#3e78b2";
                    next.style.cursor = "pointer";
                }
            }
            function goPrev()
            {
                if(!canChangePage() || pageNum == 0)  return;
                pageNum --;
                goToPage(pageNum);
                prevButton();
                nextButton();
            }
            function canChangePage()
            {
                return !isLoading;
            }
            function reloadPage()
            {
                if(isLoading) return;
                goToPage(0);
            }

            //##SEARCH

            let searchBtn = document.getElementById("searchBtn");
            let searchBar = document.getElementById("searchBar");
            searchBar.addEventListener("keyup",function()
            {
                console.log(this.value);
                search = this.value;
                if(this.value.length > 0)
                {
                    searchBtn.style.boxShadow = "inset 0px -4.5em 0 #3e78b2";
                }
                else
                {
                   searchBtn.style.boxShadow = "inset 0px -0em 0 #3e78b2";
                }
            },false);

            searchBtn.addEventListener("click",function()
            {
                reloadPage();
            },false);
        </script>
    </body>
</html>
