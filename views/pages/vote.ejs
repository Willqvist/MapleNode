<!doctype html>
<html>
    <head>
        <link rel="stylesheet" type="text/css" href="CSS/header.css">
        <link rel="stylesheet" type="text/css" href="CSS/menu.css">
        <link rel="stylesheet" type="text/css" href="CSS/index.css">
        <link rel="stylesheet" type="text/css" href="CSS/play.css">
        <% partial('imports/head') %>
        <title>Vote <%= settings.serverName %></title>
        <style>
            .box
            {
                height:20em;
            }
        </style>
        <% partial('imports/menu.ejs') %>
        <section class="maxWidth">
        <%
        if(!loggedIn)
        {
            %>
                <div class="loginBox box_style big_box">
                    <h3>Enter username</h3>
                    <input placeholder="Username..." autocomplete="off" id="username">
                    <p id="loader" ><i class="fas fa-circle-notch fa-spin"></i></p>
                </div>
            <%
        }
        %>
        </section>
        <section id="content" class="maxWidth box_wrapper">
        <%
        if(options.votes) {
            for(let vote of options.votes)
            {
            %>
            <div class="box">
                <h3 class="box_title" data-before="Download"> <%= vote.name %></h3>
                <h3 class="box_title" data-before="Nx"> <%= vote.nx %></h3>
                <h3 class="box_title" data-before="Time"> <%= vote.time %> hours</h3>
                <h3 class="box_title" data-before="Url"> <%= vote.url %></h3>
                <div class="btn-holder">
                    <div id="vote_<%= vote.ID %>" data-vote="<%= vote.ID %>" class="vote_btn btn btn-a"><a href="<%= vote.url %>"><span>Vote</span></a></div>
                </div>
            </div>
            <%
            }
        }
        %>
        </section>
    <script type="module">
        import Http from './JS/API/Http.js';
        import Url from './JS/API/Url.js';

        <%
        if(!loggedIn)
        {
        %>

        let input = document.getElementById("username");
        let p = document.getElementById("loader");
        let tout;
        let loaded = true;
        input.addEventListener("keyup",(e)=>
        {
            if(tout)
                clearTimeout(tout);
            if(input.value.length >= 1)
                loader.style.display="block";
            if(loaded)
            {
                loader.innerHTML = `<i class="fas fa-circle-notch fa-spin"></i>`;
                loaded = false;
            }
            tout = setTimeout(async ()=>
            {
                let url = new Url("IO/vote/" + input.value);
                const response = await Http.GET(url);
                console.log("response: ", response);
                loader.style.color = "red";
                if(response.success)
                {
                    loader.style.color = "green";
                    validateVote(response);
                }
                loader.innerHTML = response.reason;
                loaded = true;
            },800);
        });
        <%
        }else{
        %>
        let url = new Url("IO/vote/<%= user.name %>");
        Http.GET(url,(response)=>
        {
            validateVote(response);
        });
        <%
        }
        %>

        const btns = document.getElementsByClassName("btn");
        function validateVote(response)
        {
            console.log(response);
            for(let i = 0; i < btns.length; i++)
            {
                let btn = btns[i];
                btn.getElementsByTagName("a")[0].innerHTML = "<span>Vote</span>";
                btn.className = "vote_btn btn btn-a";
                let id = btn.getAttribute("data-vote");
                let date;
                let occ;
                let vote;
                for(let j = 0; j < response.occupied.length; j++)
                {
                    if(response.occupied[j].id == id)
                    {
                        occ = response.occupied[j];
                        date = response.occupied[j].date;
                    }
                }

                for(let j = 0; j < response.votes.length; j++)
                {
                    if(response.votes[j].ID == id)
                    {
                        vote = response.votes[j];
                    }
                }
                if(date)
                {
                    let dateTime = new Date(date);
                    let delta = parseFloat(((Math.abs(dateTime-new Date()) / 36e5)/100)*60).toFixed(2);
                    console.log(vote.time - delta);
                    btn.getElementsByTagName("a")[0].innerHTML = "<span>"+ (vote.time - delta) + "h</span>";
                }
                else
                {
                    btn.className += " validBtn";
                    btn.addEventListener("click",async ()=>
                    {
                        let url = new Url("IO/vote",{id:btn.getAttribute("data-vote"),accid:response.userid});
                        await Http.POST(url);
                    },false);
                }
            }
        }
    </script>
    </body>
</html>
